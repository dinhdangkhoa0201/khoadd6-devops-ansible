version: 2.1

orbs:
    aws-cli: circleci/aws-cli@2.0.3

commands:
    destroy_environment:
        steps:
            -   run:
                    name: Destroy environment
                    when: on_fail
                    command: |
                        aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:

    create_infrastructure:
        docker:
            -   image: amazon/aws-cli
        steps:
            - checkout
            -   run:
                    name: Create Cloudformation Stack
                    command: |
                        aws cloudformation deploy \
                        --template-file template.yml \
                        --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                        --region us-east-1

    configure_infrastructure:
        docker:
            -   image: python:3.11-rc-alpine
        steps:
            - checkout
            -   add_ssh_keys:
                    fingerprints: [ "48:48:9d:82:d5:6c:9e:85:40:52:e3:bc:b7:49:d4:c0" ]
            -   run:
                    name: Install dependencies
                    command: |
                        # install the dependencies needed for your playbook
                        apk add --update ansible
            -   run:
                    name: Install Ansible
                    command: |
                        apk add --update ansible
            -   run:
                    name: Run Playbook and Configure server
                    command: |
                        ansible-playbook -i inventory main.yml

    smoke_test:
        docker:
            -   image: alpine:latest
        steps:
            -   run: apk add --update curl
            -   run:
                    name: smoke test
                    command: |
                        URL="https://blog.udacity.com"
                        if curl -s --head ${URL}
                        then
                            return 0
                        else
                            return 1
                        fi
            -   run:
                    name: Test job
                    command: return 1
            - destroy_environment
workflows:
    myWorkflow:
        jobs:
            - create_infrastructure
              #            -   configure_infrastructure
            #                    requires:
            #                        - create_infrastructure
            -   smoke_test:
                    requires:
                        - create_infrastructure


